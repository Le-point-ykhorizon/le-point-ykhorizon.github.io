<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>agile on YKhorizon</title>
    <link>https://ykhorzon.github.io/tw/categories/agile/</link>
    <description>Recent content in agile on YKhorizon</description>
    <image>
      <url>https://ykhorzon.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://ykhorzon.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 16 May 2019 22:36:09 +0800</lastBuildDate><atom:link href="https://ykhorzon.github.io/tw/categories/agile/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Agile Summit 2019 Day1 - 敏捷心體技</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/agile_summit_2019_day1_review/</link>
      <pubDate>Thu, 16 May 2019 22:36:09 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/agile_summit_2019_day1_review/</guid>
      <description>&lt;h2 id=&#34;myths-and-patterns-of-organizational-change---linda-rising&#34;&gt;Myths and Patterns of Organizational Change - Linda Rising&lt;/h2&gt;
&lt;p&gt;現場聆聽 Linda rising 的演講後，真正感受到大師的說故事功力，語調沉穩堅定，內容句句切入基本功，淺顯易懂說明了 Agile mindset 的核心觀念與輔助觀念。&lt;/p&gt;
&lt;p&gt;1.Agile mindset(我自己認為是 agile 核心的精神，最容易可以向人說明的方式)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;just do it&lt;/li&gt;
&lt;li&gt;small success&lt;/li&gt;
&lt;li&gt;Baby step&lt;/li&gt;
&lt;li&gt;time to reflection&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.Story over facts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你一定遇過一種人，他/她跟你說話【只會】實事求是，說數據講道理，常常讓你聽不下去，覺得很難溝通，但總是說不出問題出在哪裡。Linda 提醒我們【發揮引響力需要先與人建立連結】，而故事就是你與對方連結(connection)一種很好的方式。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>風水寶地 — Agile Tour HsinChu 2018 心得</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/agile_hsinchu_tour_2018_review/</link>
      <pubDate>Sun, 09 Dec 2018 16:33:59 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/agile_hsinchu_tour_2018_review/</guid>
      <description>&lt;h2 id=&#34;起源&#34;&gt;起源&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;過去參加過 design thinking workshop 花費不少鈔票，對過去身為學生的我來說，是一筆不小的金額，但對我的影響非常深遠，讓我瞭解更多除了工程技術視野以外的世界。&lt;/p&gt;
&lt;p&gt;因此，我特別注意軟實力的分享與聚會，剛好在新竹在地唸書這段時間，無意見發現了三叔公的敏捷社群，我的直覺告訴我，這些聚會分享都是很有價值，在外面上課程要花費不少鈔票，可遇不可求；在很多一般技術社群中，要遇到類似性質內容更是困難。&lt;/p&gt;
&lt;p&gt;每個月舉辦各種軟實力的內容之豐富，如產品探索、服務設計、敏捷導入、開發測試&amp;hellip;&amp;hellip;etc，我也因此參加了四次 Agile Tour HsinChu，可說是上好上滿XD，&lt;strong&gt;對我來說就像是挖到『風水寶地』一般，可以源源不絕得探索各種領域，處處都有寶藏&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在這次 Agile Tour HsincChu 中，印象比較深刻的內容，大多是故事性比較強，引人入勝讓人不目轉睛，又或者是 workshop 這類互動性強，有實際動手和小組一起討論的活動，讓人記憶點特別深刻！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一場深度跨領域交流的探險 — Agile Tour Taipei 2018 心得(下)</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/agile_taipei_tour_2018_review2/</link>
      <pubDate>Sun, 02 Dec 2018 00:17:44 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/agile_taipei_tour_2018_review2/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>一場深度跨領域交流的探險 — Agile Tour Taipei 2018 心得(上)</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/agile_taipei_tour_2018_review1/</link>
      <pubDate>Sat, 01 Dec 2018 22:54:04 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/agile_taipei_tour_2018_review1/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;探險&#34;&gt;探險&lt;/h2&gt;
&lt;p&gt;今年是第一次搶到票，參加 Agile Tour Taipei 盛會，會說是『一場深度跨領域交流的探險』來自於A,B,C Track 分別是探討的issue是 Product、Dev/Test、UX，可說是三個願望一次滿足，讓我的選擇困難症完全發作，好想同時聽三軌呀呀。同時，一次匯聚三種群體到一場研討會中，更能激發豐富的討論，探索不同觀點的價值，讓對話能夠突破各自熟悉的同溫層，說是一場探險一點也不為過！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>從『讓李小龍你看見 Kanban 的美好』到改進我的 Personal Kanban - Part I kanban 觀念釐清</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/agile_kanban_bruce_lee_part_i/</link>
      <pubDate>Sat, 18 Aug 2018 17:46:11 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/agile_kanban_bruce_lee_part_i/</guid>
      <description>&lt;h1 id=&#34;文章要點&#34;&gt;文章要點&lt;/h1&gt;
&lt;p&gt;文章主要分成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一篇 Part I 是『讓李小龍你看見 Kanban 的美好』的統整和心得，參雜一些個人的解釋&lt;/li&gt;
&lt;li&gt;第二篇 Part II 則是我嘗試使用學習到的kanban觀念，改進我的『個人看板』（尚未完成）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;kanban-簡介&#34;&gt;Kanban 簡介&lt;/h1&gt;
&lt;p&gt;如果你上網搜尋 Kanban 可能會出現，兩種最常見的解釋，其一是&lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban&#34;&gt;豐田生產模式的 kanban&lt;/a&gt; ，發明人為&lt;a href=&#34;https://en.wikipedia.org/wiki/Taiichi_Ohno&#34;&gt;大野耐一&lt;/a&gt;，致力於工廠生產效率改善；其二為應用於&lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban_(development)&#34;&gt;軟體流程開發的 Kanban (Development)&lt;/a&gt;，此方法著名得提倡者 &lt;a href=&#34;https://www.linkedin.com/in/agilemanagement/&#34;&gt;David J. Anderson&lt;/a&gt;，他是微軟導入 kanban 方法等敏捷方法的先驅，解救微軟績效不佳的支援部門，設法尋找一套方法讓部門問題自然浮現；早期著名著作有 &lt;a href=&#34;https://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402&#34;&gt;Kanban: Successful Evolutionary Change for Your Technology Business&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>從『讓李小龍你看見 Kanban 的美好』到改進我的 Personal Kanban - Part I kanban 觀念釐清</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/agile_kanban_bruce_lee_part_i/</link>
      <pubDate>Sat, 18 Aug 2018 17:46:11 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/agile_kanban_bruce_lee_part_i/</guid>
      <description>&lt;h1 id=&#34;文章要點&#34;&gt;文章要點&lt;/h1&gt;
&lt;p&gt;文章主要分成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一篇 Part I 是『讓李小龍你看見 Kanban 的美好』的統整和心得，參雜一些個人的解釋&lt;/li&gt;
&lt;li&gt;第二篇 Part II 則是我嘗試使用學習到的kanban觀念，改進我的『個人看板』（尚未完成）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;kanban-簡介&#34;&gt;Kanban 簡介&lt;/h1&gt;
&lt;p&gt;如果你上網搜尋 Kanban 可能會出現，兩種最常見的解釋，其一是&lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban&#34;&gt;豐田生產模式的 kanban&lt;/a&gt; ，發明人為&lt;a href=&#34;https://en.wikipedia.org/wiki/Taiichi_Ohno&#34;&gt;大野耐一&lt;/a&gt;，致力於工廠生產效率改善；其二為應用於&lt;a href=&#34;https://en.wikipedia.org/wiki/Kanban_(development)&#34;&gt;軟體流程開發的 Kanban (Development)&lt;/a&gt;，此方法著名得提倡者 &lt;a href=&#34;https://www.linkedin.com/in/agilemanagement/&#34;&gt;David J. Anderson&lt;/a&gt;，他是微軟導入 kanban 方法等敏捷方法的先驅，解救微軟績效不佳的支援部門，設法尋找一套方法讓部門問題自然浮現；早期著名著作有 &lt;a href=&#34;https://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402&#34;&gt;Kanban: Successful Evolutionary Change for Your Technology Business&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps 全棧工程師-活動心得</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/devops_experience/</link>
      <pubDate>Wed, 02 Aug 2017 12:41:57 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/devops_experience/</guid>
      <description>DevOps這麼紅？到底在紅什麼？基本功又有哪些？</description>
    </item>
    
    <item>
      <title>User Story 的那些人與那些事</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/user-story-%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%BA%E8%88%87%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
      <pubDate>Wed, 03 May 2017 10:32:13 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/user-story-%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%BA%E8%88%87%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;序言&#34;&gt;序言&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;User Story 不只是一張卡片，是說故事與溝通需求的載體&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;從這篇文章得到&#34;&gt;從這篇文章得到&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;此篇是 User Story 實戰篇的階議題&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;心得&#34;&gt;心得&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;有使用過 User Story 經驗的人，能夠討論出真實問題，彼此切磋，討論氣氛活絡 (有一點像是 Planning Poker 分享大會)&lt;/li&gt;
&lt;li&gt;Alway observe and find bottleneck in team ( or system or problem )&lt;/li&gt;
&lt;li&gt;經常思考事情的dependency與前置準備，在真正要動工的時候，把需要的資源都在手上&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;what-is-user-story-&#34;&gt;What is User Story ?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;User stories are short, simple descriptions of a feature told from the perspective of the person who desires the new capability,&amp;gt; usually a user or customer of the system.&lt;/p&gt;
&lt;p&gt;from Mountain Goat Software&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另一個定義&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A user story is a tool used in Agile software development to capture a description of a software feature from an end-user perspective. The user story describes the type of user, what they want and why. A user story helps to create a simplified description of a requirement.&lt;/p&gt;
&lt;p&gt;from TechTarget&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mountaingoatsoftware.com/agile/user-stories&#34;&gt;Mountain Goat Software, User Stories&lt;/a&gt;
&lt;a href=&#34;http://searchsoftwarequality.techtarget.com/definition/user-story&#34;&gt;TechTarget, User Story&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;簡短需求小卡( Card )&lt;/li&gt;
&lt;li&gt;交談 ( Conversation )&lt;/li&gt;
&lt;li&gt;確認 ( Confirmation )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作為基底、high level&lt;/li&gt;
&lt;li&gt;注重在價值&lt;/li&gt;
&lt;li&gt;不要 &lt;em&gt;帶入 Spec.&lt;/em&gt; 或 &lt;em&gt;過多功能描述&lt;/em&gt; 在其中 (會限制 Solution的可能性)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>User Story 的那些人與那些事</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/user-story-%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%BA%E8%88%87%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
      <pubDate>Wed, 03 May 2017 10:32:13 +0800</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/user-story-%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%BA%E8%88%87%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;序言&#34;&gt;序言&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;User Story 不只是一張卡片，是說故事與溝通需求的載體&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;從這篇文章得到&#34;&gt;從這篇文章得到&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;此篇是 User Story 實戰篇的階議題&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;心得&#34;&gt;心得&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;有使用過 User Story 經驗的人，能夠討論出真實問題，彼此切磋，討論氣氛活絡 (有一點像是 Planning Poker 分享大會)&lt;/li&gt;
&lt;li&gt;Alway observe and find bottleneck in team ( or system or problem )&lt;/li&gt;
&lt;li&gt;經常思考事情的dependency與前置準備，在真正要動工的時候，把需要的資源都在手上&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;what-is-user-story-&#34;&gt;What is User Story ?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;User stories are short, simple descriptions of a feature told from the perspective of the person who desires the new capability,&amp;gt; usually a user or customer of the system.&lt;/p&gt;
&lt;p&gt;from Mountain Goat Software&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另一個定義&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A user story is a tool used in Agile software development to capture a description of a software feature from an end-user perspective. The user story describes the type of user, what they want and why. A user story helps to create a simplified description of a requirement.&lt;/p&gt;
&lt;p&gt;from TechTarget&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mountaingoatsoftware.com/agile/user-stories&#34;&gt;Mountain Goat Software, User Stories&lt;/a&gt;
&lt;a href=&#34;http://searchsoftwarequality.techtarget.com/definition/user-story&#34;&gt;TechTarget, User Story&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;簡短需求小卡( Card )&lt;/li&gt;
&lt;li&gt;交談 ( Conversation )&lt;/li&gt;
&lt;li&gt;確認 ( Confirmation )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;作為基底、high level&lt;/li&gt;
&lt;li&gt;注重在價值&lt;/li&gt;
&lt;li&gt;不要 &lt;em&gt;帶入 Spec.&lt;/em&gt; 或 &lt;em&gt;過多功能描述&lt;/em&gt; 在其中 (會限制 Solution的可能性)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>敏捷需求探索工作坊</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/%E6%95%8F%E6%8D%B7%E9%9C%80%E6%B1%82%E6%8E%A2%E7%B4%A2%E5%B7%A5%E4%BD%9C%E5%9D%8A/</link>
      <pubDate>Sun, 26 Feb 2017 23:35:22 +0000</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/%E6%95%8F%E6%8D%B7%E9%9C%80%E6%B1%82%E6%8E%A2%E7%B4%A2%E5%B7%A5%E4%BD%9C%E5%9D%8A/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;序言&#34;&gt;序言&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;找到缺少的拼圖就是Impact Mapping&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;你將可以從這篇文章得到&#34;&gt;你將可以從這篇文章得到&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;開發產品簡易全貌 (著重需求探索)&lt;/li&gt;
&lt;li&gt;影響地圖 Impact Mapping 概念與操作&lt;/li&gt;
&lt;li&gt;探訪基礎&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;敏捷概述&#34;&gt;敏捷概述&lt;/h1&gt;
&lt;p&gt;敏捷開發的精神，可以由最就代表性 &lt;strong&gt;&amp;ldquo;敏捷宣言&amp;rdquo;&lt;/strong&gt; 說起，原文如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We are uncovering better ways of developing
software by doing it and helping others do it.
Through this work we have come to value:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Individuals and interactions over processes and tools
Working software over comprehensive documentation
Customer collaboration over contract negotiation
Responding to change over following a plan&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;That is, while there is value in the items on
the right, we value the items on the left more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;a href=&#34;http://agilemanifesto.org/&#34;&gt;Manifesto for Agile Software Development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;核心精神：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自主管理&lt;/li&gt;
&lt;li&gt;持續改進&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我自己的理解是：
以人的出發思考，每個人願意發表想法、當面溝通比起工具、方法論，更能深入問題的根本(因為軟體是人在開發)
軟體是我們打造的產品，產品本身品質(可讀性、可測試性)，可以更根本解決問題，因為維護文件也是成本&lt;/p&gt;
&lt;p&gt;回歸人的本質，客戶也是人，溝通合作，取得共識，取得雙贏。最為合作底謝的合約白紙黑字必須要有，
但互相合作更為愉快。(有點類似道德和法律的感覺)
最後，接受現實，計畫永遠敢不上變化，用開放的態度適時做出調整。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>敏捷需求探索工作坊</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/%E6%95%8F%E6%8D%B7%E9%9C%80%E6%B1%82%E6%8E%A2%E7%B4%A2%E5%B7%A5%E4%BD%9C%E5%9D%8A/</link>
      <pubDate>Sun, 26 Feb 2017 23:35:22 +0000</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/%E6%95%8F%E6%8D%B7%E9%9C%80%E6%B1%82%E6%8E%A2%E7%B4%A2%E5%B7%A5%E4%BD%9C%E5%9D%8A/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;序言&#34;&gt;序言&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;找到缺少的拼圖就是Impact Mapping&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;你將可以從這篇文章得到&#34;&gt;你將可以從這篇文章得到&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;開發產品簡易全貌 (著重需求探索)&lt;/li&gt;
&lt;li&gt;影響地圖 Impact Mapping 概念與操作&lt;/li&gt;
&lt;li&gt;探訪基礎&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;敏捷概述&#34;&gt;敏捷概述&lt;/h1&gt;
&lt;p&gt;敏捷開發的精神，可以由最就代表性 &lt;strong&gt;&amp;ldquo;敏捷宣言&amp;rdquo;&lt;/strong&gt; 說起，原文如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We are uncovering better ways of developing
software by doing it and helping others do it.
Through this work we have come to value:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Individuals and interactions over processes and tools
Working software over comprehensive documentation
Customer collaboration over contract negotiation
Responding to change over following a plan&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;That is, while there is value in the items on
the right, we value the items on the left more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;a href=&#34;http://agilemanifesto.org/&#34;&gt;Manifesto for Agile Software Development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;核心精神：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自主管理&lt;/li&gt;
&lt;li&gt;持續改進&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我自己的理解是：
以人的出發思考，每個人願意發表想法、當面溝通比起工具、方法論，更能深入問題的根本(因為軟體是人在開發)
軟體是我們打造的產品，產品本身品質(可讀性、可測試性)，可以更根本解決問題，因為維護文件也是成本&lt;/p&gt;
&lt;p&gt;回歸人的本質，客戶也是人，溝通合作，取得共識，取得雙贏。最為合作底謝的合約白紙黑字必須要有，
但互相合作更為愉快。(有點類似道德和法律的感覺)
最後，接受現實，計畫永遠敢不上變化，用開放的態度適時做出調整。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TGDF 2016 - Fail Fast 閃退</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/fail_fast/</link>
      <pubDate>Wed, 14 Sep 2016 23:15:29 +0000</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/fail_fast/</guid>
      <description>Fail Fast─為什麼閃退是好事 (Undone) Speaker: 雷亞 Co-founder 楊善詠
挑戰  技術人才培育 跨平台架構  事實上是救火雷亞
員工人數遽增 2011 , 16人 2016, &amp;gt;100人
死亡行軍：規格變更
Reference: SE系統工程師
種下惡因？ 效能問題？ 為了方便？用最簡單方式測試
BUG？ 自己的BUG自己修？那別人的呢？ 來自game engine 的問題
無法修正問題？ =&amp;gt; &amp;ldquo;改變規格&amp;rdquo;，讓玩家看不到
遊戲前端很難測試 可能的解法 避開錯誤（X） =&amp;gt; 盡可能提早發現錯誤 =&amp;gt; fail fast
簡單Example Defensive Programming 防禦性程式設計(避免software crash為目的）  接到 null 是正常的現象嗎？ 淺在造成bug，卻可能造成無法找出問題  ** NullPointerException ** Debug assert
Check input value ( use assertion too!) Add up the diagnosis info for future</description>
    </item>
    
    <item>
      <title>COSCUP Startup Culture Buliding Talk</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/coscup-startup-culture-buliding-talk/</link>
      <pubDate>Mon, 12 Sep 2016 20:09:59 +0000</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/coscup-startup-culture-buliding-talk/</guid>
      <description>關鍵因素  人 環境(core) 文化(core) 方法 工具  How to Open?
工廠 vs 創意   product-driven
  customer-driven
  敏捷的文化
  增進彼此之間的溝通
  多一點『引導』，少一點『管理』
  用團隊取代英雄
   管理：高階領導必須要思考是『如何在讓每一個人在環境中發揮實力』
 常見的方式
 scrum kanban water-fall  PM 為溝通的角色
溝通  應用對方可以理解的話語，把訊息傳達進去 如何建立人與人的連結？ 持之以行的舉辦  讓彼此知道彼此    如何提升資訊透明度 目標清楚
 過程 成果; 成果狀態(白板) ，即是 kanban  自動化測試使工作有效
 Jenkins  </description>
    </item>
    
    <item>
      <title>COSCUP Startup Culture Buliding Talk</title>
      <link>https://ykhorzon.github.io/tw/post/softskill_agile/coscup-startup-culture-buliding-talk/</link>
      <pubDate>Mon, 12 Sep 2016 20:09:59 +0000</pubDate>
      
      <guid>https://ykhorzon.github.io/tw/post/softskill_agile/coscup-startup-culture-buliding-talk/</guid>
      <description>關鍵因素  人 環境(core) 文化(core) 方法 工具  How to Open?
工廠 vs 創意   product-driven
  customer-driven
  敏捷的文化
  增進彼此之間的溝通
  多一點『引導』，少一點『管理』
  用團隊取代英雄
   管理：高階領導必須要思考是『如何在讓每一個人在環境中發揮實力』
 常見的方式
 scrum kanban water-fall  PM 為溝通的角色
溝通  應用對方可以理解的話語，把訊息傳達進去 如何建立人與人的連結？ 持之以行的舉辦  讓彼此知道彼此    如何提升資訊透明度 目標清楚
 過程 成果; 成果狀態(白板) ，即是 kanban  自動化測試使工作有效
 Jenkins  </description>
    </item>
    
  </channel>
</rss>
